#pragma once

// Dumped with Dumper-7!

namespace SDK
{
	//---------------------------------------------------------------------------------------------------------------------
	// CLASSES
	//---------------------------------------------------------------------------------------------------------------------

	// 0x4C1 (0x89D1 - 0x8510)
	// BlueprintGeneratedClass m2data.m2data_C
	class UM2data_C : public UFmdata
	{
	public:
		struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0x8510(0x8)(ZeroConstructor, Transient, DuplicateTransient)
		class ALoader* Loader;                                            // 0x8518(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         TextTyping;                                        // 0x8520(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		bool                                         HaveMsgbox;                                        // 0x8521(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_FF0[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		class UM2save_C* M2save;                                            // 0x8528(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class ULoginScreen_C* LoginMain;                                         // 0x8530(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		struct FVector                               NonPlayerPos;                                      // 0x8538(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		uint8                                        Pad_FF5[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		class ACameraActor* CharSelectCamera;                                  // 0x8548(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         Loginok;                                           // 0x8550(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_FF6[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class UObject*>                       LoadedAssets;                                      // 0x8558(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
		bool                                         FirstLogin;                                        // 0x8568(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_FF7[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Platform;                                          // 0x8570(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
		class APControl_C* PlayerController;                                  // 0x8580(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class FString                                Lang2;                                             // 0x8588(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
		class AWheather_C* Wheather;                                          // 0x8598(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UUI_C* UiMain;                                            // 0x85A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<struct FInventory>                            Inv;                                               // 0x85A8(0x58)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
		class USlot_C* HitSlot;                                           // 0x8600(0x8)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UWidget* HitWidget;                                         // 0x8608(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         IsHitSlot;                                         // 0x8610(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_FF8[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		class USlot_C* DraggingSlot;                                      // 0x8618(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         IsDragging;                                        // 0x8620(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                         LastSlotStatus;                                    // 0x8621(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_FF9[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		struct FIitem                                DraggingItem;                                      // 0x8628(0x148)(Edit, BlueprintVisible, DisableEditOnInstance)
		bool                                         DroppingItem;                                      // 0x8770(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_FFA[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
		class UTexture2D* EmptyTexture;                                      // 0x8778(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<struct FQuickSlot>                    QuickSlots;                                        // 0x8780(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
		int32                                        InvRowCount;                                       // 0x8790(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		int32                                        SlotCount;                                         // 0x8794(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<class USlot_C*>                       SkillSlots;                                        // 0x8798(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
		class UShopWindow_C* ShopWindow;                                        // 0x87A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UPrivateShopView_C* PrivateShopView;                                   // 0x87B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UCreateShop_C* CreateShop;                                        // 0x87B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UDemirci_C* DemirciBox;                                        // 0x87C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UMsgbox_C* DropWindow;                                        // 0x87C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UTrade_C* TradeWindow;                                       // 0x87D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UMobileUI_C* MobileUI;                                          // 0x87D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		int32                                        PlayerInvCount;                                    // 0x87E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		uint8                                        Pad_1000[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UMallView_C* MallView;                                          // 0x87E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UObject* SelectedObject;                                    // 0x87F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class USlot_C* SelectedShopSlot;                                  // 0x87F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<struct FTimerHandle>                  Timers;                                            // 0x8800(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
		class UFishOnay_C* FishBox;                                           // 0x8810(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UTasbas_C* Tasbas;                                            // 0x8818(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		struct FRefine                               TasbasData;                                        // 0x8820(0x34)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
		uint8                                        Pad_1002[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UGroup_C* Group;                                             // 0x8858(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<int32>                                GroupAddedPlayers;                                 // 0x8860(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
		class UUserWidget* WsPanel;                                           // 0x8870(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UDialogue_C* Dialogue;                                          // 0x8878(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         Dialoging;                                         // 0x8880(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1003[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UData_C* Data;                                              // 0x8888(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         World;                                             // 0x8890(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1004[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MaxStackableCount;                                 // 0x8894(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         SkillGet;                                          // 0x8898(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1006[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        SkillGroup;                                        // 0x889C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         SkillDataLoaded;                                   // 0x88A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		bool                                         GameInitStatus;                                    // 0x88A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		bool                                         DraggingSkill;                                     // 0x88A2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1008[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FQuickSlot>                    Qs;                                                // 0x88A8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
		bool                                         SkillInit;                                         // 0x88B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1009[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UObject* MobileControl;                                     // 0x88C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<class FString>                        _debugCorners;                                     // 0x88C8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
		bool                                         _debugCornersPrinted;                              // 0x88D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		bool                                         PlayerAnim;                                        // 0x88D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_100A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCharSelect_C* CharSelect;                                        // 0x88E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class ANpc* RPlayer;                                           // 0x88E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<int32>                                OtoPots;                                           // 0x88F0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance)
		class UMsgboxLogin_C* MsgboxLogin;                                       // 0x8900(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UOkeyGame_C* OkeyGame;                                          // 0x8908(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class AItemShopBack_C* ItemShop;                                          // 0x8910(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class ACameraActor* ItemShopCamera;                                    // 0x8918(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UUIhandler_C* UIhandler;                                         // 0x8920(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         IsGM;                                              // 0x8928(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1010[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Channel;                                           // 0x892C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class UCostumeAttr_C* CostumeAttr;                                       // 0x8930(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class FString                                LocTemp;                                           // 0x8938(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
		TArray<class ACharView*>                     CharSelectChars;                                   // 0x8948(0x10)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
		class USmsVerify_C* Smser;                                             // 0x8958(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		class FString                                Str1;                                              // 0x8960(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
		class UItemShopPay_C* ItemShopPay;                                       // 0x8970(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		struct FDateTime                             DragTime;                                          // 0x8978(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
		bool                                         IsCinematicMode;                                   // 0x8980(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
		uint8                                        Pad_1013[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UActorName_C* PlayerMeName;                                      // 0x8988(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		TArray<class UActorNameMob_C*>               MobMenames;                                        // 0x8990(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
		TArray<class UActorNameRPlayer_C*>           PlayerMeNames;                                     // 0x89A0(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
		FMulticastInlineDelegateProperty_            Unfocus;                                           // 0x89B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
		int32                                        ItemShopOpenCatId;                                 // 0x89C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		uint8                                        Pad_1016[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class USettings_C* Settings;                                          // 0x89C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
		bool                                         SaveLoaded;                                        // 0x89D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

		static class UClass* StaticClass();
		static class UM2data_C* GetDefaultObj();

		void ToggleCinematic(bool Res, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class UM2data_C* CallFunc_game_game, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UM2data_C* CallFunc_game_game_1, class UM2data_C* CallFunc_game_game_2, class UActorNameRPlayer_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UActorNameMob_C* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_isMobile_isMobile, bool CallFunc_isMobile_isMobile_1, class UM2data_C* CallFunc_game_game_3, class UM2data_C* CallFunc_game_game_4);
		void Garbage();
		void OpenWebBrowser(const class FString& Link, class UWebBrowser_C** browser, class UWebBrowser_C* CallFunc_Create_ReturnValue);
		void OpenMobile2Website(const class FString& URL, const class FString& Str);
		void GetSkillUsableByType(int32 SkillId, int32 Type, bool* NewParam, bool CallFunc_Less_IntInt_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_2);
		void QuickSlotCanTake(class USlot_C* Ref, bool* Res, const class FString& CallFunc_getItemSubType_type, const class FString& CallFunc_getItemType_type, bool CallFunc_Contains_ReturnValue, bool CallFunc_Contains_ReturnValue_1, bool CallFunc_Contains_ReturnValue_2, bool CallFunc_Contains_ReturnValue_3, bool CallFunc_Contains_ReturnValue_4, bool CallFunc_Contains_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3);
		void CheckInsult(const class FString& Checkstr, bool* Res, TArray<class FString>& CallFunc_ParseIntoArray_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Array_Get_Item, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UM2data_C* CallFunc_game_game, bool CallFunc_Array_Contains_ReturnValue);
		void DateText(const struct FTimespan& Tim, class FString* Outdate, const class FString& Date, int32 CallFunc_BreakTimespan_Days, int32 CallFunc_BreakTimespan_Hours, int32 CallFunc_BreakTimespan_Minutes, int32 CallFunc_BreakTimespan_Seconds, int32 CallFunc_BreakTimespan_Milliseconds, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, const class FString& CallFunc_gtext_ReturnValue, const class FString& CallFunc_gtext_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_gtext_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7);
		void FocusGame();
		void OpenItemShopPacket(const struct FPacket& Packet, class UM2data_C* CallFunc_game_game, bool CallFunc_IsValid_ReturnValue);
		void GetSlotItem(int32 ID, struct FItem* Item, class USlot_C* CallFunc_getSlotPure_slotOut, bool CallFunc_getSlotPure_findo);
		void OpenItemShop(int32 Catid, TArray<class FString>& K2Node_MakeArray_Array, TArray<int32>& K2Node_MakeArray_Array_1, class UM2data_C* CallFunc_game_game);
		void GetCharImage(int32 Type, struct FSlateBrush* NewParam1, class UPaperSprite* Img, bool K2Node_SwitchInteger_CmpSuccess, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
		void GoTargetEffect(class USkeletalMeshComponent* Ske, class FName SkeSocket, class AActor* Target, class UParticleSystem* Effect, float Delay, float Speed, class USoundBase* Sound, float IsDirectioner, float MinShowTime, bool DoDrop, bool ShowHit, float Size, bool AffectAll, float AffectDistance, bool SpawnOnTarget, bool AttachForGo, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, class AGo* CallFunc_FinishSpawningActor_ReturnValue);
		void Disconnect();
		void AddSameStackable(class USlot_C* Source, class USlot_C* Target, int32 OldTargetCount, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
		void CheckStackable(class USlot_C* Source, class USlot_C* Target, bool* Can, bool CallFunc_getItemFlag_isHave, bool CallFunc_Contains_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_getItemFlag_isHave_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
		void CheckUseItem(class USlot_C* Source, class USlot_C* Target, bool* Can, bool* Local, const class FString& CallFunc_getItemSubType_type, bool K2Node_SwitchString_CmpSuccess, const class FString& CallFunc_getItemType_type, bool CallFunc_Contains_ReturnValue, bool K2Node_SwitchString_CmpSuccess_1, const class FString& CallFunc_getItemSubType_type_1, bool K2Node_SwitchString_CmpSuccess_2, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_Contains_ReturnValue_1, bool CallFunc_Contains_ReturnValue_2, const class FString& CallFunc_getItemType_type_1, bool CallFunc_BooleanAND_ReturnValue, bool K2Node_SwitchString_CmpSuccess_3, bool CallFunc_BooleanOR_ReturnValue);
		void SlotCanTake(int32 Slot, const struct FIitem& Item, bool* CanTake, class FString* Message, const class FString& ItemSubTypem, const class FString& ItemTypem, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, bool CallFunc_Contains_ReturnValue, bool CallFunc_Contains_ReturnValue_1);
		void Change_Slot(class UUserWidget* SourceSlot, class UUserWidget* TargetSlot, const struct FItem& TargetT, const struct FItem& SourceT, class USlot_C* K2Node_DynamicCast_AsSlot, bool K2Node_DynamicCast_bSuccess, class USlot_C* K2Node_DynamicCast_AsSlot_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_IntInt_ReturnValue, class USlot_C* K2Node_DynamicCast_AsSlot_2, bool K2Node_DynamicCast_bSuccess_2, class USlot_C* K2Node_DynamicCast_AsSlot_3, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
		void ChangeCharDataInv(const struct FInvItem& Old, const struct FInvItem& New, int32 Oldid, int32 Newid);
		void CheckSlotLoc(int32 Slotid, bool* Res, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_EqualEqual_BoolBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_Greater_IntInt_ReturnValue_3, bool CallFunc_EqualEqual_BoolBool_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_EqualEqual_BoolBool_ReturnValue_3, int32 CallFunc_Add_IntInt_ReturnValue_1, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo, bool CallFunc_Less_IntInt_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_8);
		void GetPlayerItemSubType(const class FString& SubType, bool NeedLevel, class USlot_C** Slot, bool* Found, bool* ErrLevel, bool LevelErr, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<int32>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo, bool CallFunc_Less_IntInt_ReturnValue, const struct FInvItem& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const struct FIitem& CallFunc_getItem_item, int32 CallFunc_getItemLimitValue_value, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue);
		void GetItemLimitValue(const struct FIitem& Item, const class FString& Limit, int32* Value, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1);
		void GetSlotCount(int32* C, const struct FCharData& CallFunc_getCharData_chardata, int32 CallFunc_Map_Length_ReturnValue);
		void EqupCanTake(int32 Equpid, const struct FIitem& Itemref, bool* Can, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, bool CallFunc_EqualEqual_StrStr_ReturnValue_2, bool CallFunc_EqualEqual_StrStr_ReturnValue_3, bool CallFunc_EqualEqual_StrStr_ReturnValue_4, bool CallFunc_EqualEqual_StrStr_ReturnValue_5, bool CallFunc_EqualEqual_StrStr_ReturnValue_6, bool CallFunc_EqualEqual_StrStr_ReturnValue_7, bool CallFunc_EqualEqual_StrStr_ReturnValue_8, bool CallFunc_EqualEqual_StrStr_ReturnValue_9, bool CallFunc_EqualEqual_StrStr_ReturnValue_10, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_11);
		void SpawnSkill(bool IsWeapon, int32 SkillId, class AActor* Actr, int32 Duration);
		void CheckFishable(class AActor* Player, bool* Res, struct FVector* HitPos, const struct FVector& Pos, bool WaterSet, bool FirstLandscape, bool Temp_bool_True_if_break_was_hit_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, int32 Temp_int_Array_Index_Variable, TArray<struct FHitResult>& CallFunc_BoxTraceMulti_OutHits, bool CallFunc_BoxTraceMulti_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_ActorHasTag_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
		void InvitemToItem(const struct FInvItem& InvItem, struct FItem* Item, const struct FItem& K2Node_MakeStruct_item);
		void QuickUse(int32 ID, const struct FQuickSlot& CallFunc_getQuickSlot_q);
		void InitSkills(const struct FCharData& CallFunc_getCharData_chardata, bool K2Node_SwitchInteger_CmpSuccess);
		void Reload(TArray<struct FQuickSlot>& Temp_struct_Variable, TArray<struct FQuickSlot>& Temp_struct_Variable_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FTimerHandle& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_K2_IsValidTimerHandle_ReturnValue, bool CallFunc_IsValid_ReturnValue);
		void MakeQuestString(const class FString& Qdata, int32* ID, class FString* Text, const class FString& Param, const class FString& Qq, const class FString& CallFunc_Split_LeftS, const class FString& CallFunc_Split_RightS, bool CallFunc_Split_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue, const class FString& CallFunc_Split_LeftS_1, const class FString& CallFunc_Split_RightS_1, bool CallFunc_Split_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_Split_LeftS_2, const class FString& CallFunc_Split_RightS_2, bool CallFunc_Split_ReturnValue_2, int32 CallFunc_Conv_StringToInt_ReturnValue_1, int32 CallFunc_Len_ReturnValue, TArray<int32>& K2Node_MakeArray_Array, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue_1, bool K2Node_SwitchString_CmpSuccess, const class FString& CallFunc_gtext_ReturnValue, const class FString& CallFunc_qtext_ReturnValue, const class FString& CallFunc_gtext_ReturnValue_1, bool CallFunc_EqualEqual_StrStr_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue_2, const class FString& CallFunc_gtext_ReturnValue_2, const struct FMob& CallFunc_getMob_mob, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, const class FString& CallFunc_qtext_ReturnValue_1, bool CallFunc_IsNumeric_ReturnValue, TArray<class FString>& K2Node_MakeArray_Array_1, const class FString& CallFunc_formatText_ReturnValue);
		void GetPointerPos(struct FVector2D* Pos, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool CallFunc_isMobile_isMobile, float CallFunc_GetMousePositionScaledByDPI_LocationX, float CallFunc_GetMousePositionScaledByDPI_LocationY, bool CallFunc_GetMousePositionScaledByDPI_ReturnValue, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, class APlayerController* CallFunc_GetPlayerControllerFromID_ReturnValue, float CallFunc_GetInputTouchState_LocationX, float CallFunc_GetInputTouchState_LocationY, bool CallFunc_GetInputTouchState_bIsCurrentlyPressed, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue_1);
		void DateToString(const struct FDateTime& DateTime, bool ShowTime, bool ShowTimeSecond, class FString* Str, int32 CallFunc_BreakDateTime_Year, int32 CallFunc_BreakDateTime_Month, int32 CallFunc_BreakDateTime_Day, int32 CallFunc_BreakDateTime_Hour, int32 CallFunc_BreakDateTime_Minute, int32 CallFunc_BreakDateTime_Second, int32 CallFunc_BreakDateTime_Millisecond, class FText CallFunc_Conv_IntToText_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, class FText CallFunc_Conv_IntToText_ReturnValue_2, class FText CallFunc_Conv_IntToText_ReturnValue_3, const class FString& CallFunc_Conv_TextToString_ReturnValue_2, const class FString& CallFunc_Conv_TextToString_ReturnValue_3, class FText CallFunc_Conv_IntToText_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_4, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, int32 CallFunc_BreakDateTime_Year_1, int32 CallFunc_BreakDateTime_Month_1, int32 CallFunc_BreakDateTime_Day_1, int32 CallFunc_BreakDateTime_Hour_1, int32 CallFunc_BreakDateTime_Minute_1, int32 CallFunc_BreakDateTime_Second_1, int32 CallFunc_BreakDateTime_Millisecond_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, class FText CallFunc_Conv_IntToText_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Conv_TextToString_ReturnValue_5, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, class FText CallFunc_Conv_IntToText_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Conv_TextToString_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, class FText CallFunc_Conv_IntToText_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8, const class FString& CallFunc_Conv_TextToString_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_9, const class FString& CallFunc_Concat_StrStr_ReturnValue_10, class FText CallFunc_Conv_IntToText_ReturnValue_8, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_8, const class FString& CallFunc_Concat_StrStr_ReturnValue_11, const class FString& CallFunc_Concat_StrStr_ReturnValue_12, const class FString& CallFunc_Concat_StrStr_ReturnValue_13, const class FString& CallFunc_Concat_StrStr_ReturnValue_14, const class FString& CallFunc_Concat_StrStr_ReturnValue_15, const class FString& CallFunc_Concat_StrStr_ReturnValue_16, const class FString& CallFunc_Concat_StrStr_ReturnValue_17, const class FString& CallFunc_Concat_StrStr_ReturnValue_18, const class FString& CallFunc_Concat_StrStr_ReturnValue_19);
		void ClearInvChardata(int32 Slotid, const struct FInvItem& K2Node_MakeStruct_invItem, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue);
		void ChatButton();
		void ClearSelected(class USlot_C* K2Node_DynamicCast_AsSlot, bool K2Node_DynamicCast_bSuccess);
		void DropItem(int32 Slotid, TArray<class FString>& K2Node_MakeArray_Array, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo, const struct FQuickSlot& CallFunc_getQuickSlot_q, TArray<int32>& K2Node_MakeArray_Array_1);
		void GetBox(int32 ItemId, TArray<class FString>* boxContains, bool* Found, bool F, bool CallFunc_getBox_isBox, const class FString& CallFunc_getBox_ob, TArray<class FString>& CallFunc_ParseIntoArray_ReturnValue);
		void SelectShopSlot(class USlot_C* Slot, class UM2data_C* CallFunc_game_game, class USlot_C* K2Node_DynamicCast_AsSlot, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
		void SelectNearTarget(float Dis, bool* Selected, float Near, class ANpc* Nearest, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class ANpc* K2Node_DynamicCast_AsNpc, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class ANpc* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_canAttack_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, float CallFunc_Vector_Distance_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_Less_FloatFloat_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2);
		void SkillUser(class AActor* Target, int32 SkillId, class ANpc* K2Node_DynamicCast_AsNpc, bool K2Node_DynamicCast_bSuccess, class APlayerMove* K2Node_DynamicCast_AsPlayer_Move, bool K2Node_DynamicCast_bSuccess_1, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);
		void ItemUse(int32 Slotid, int32 TargSlotId, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo, bool CallFunc_itemCanUse_isCanUse, const class FString& CallFunc_itemCanUse_message, const class FString& CallFunc_itemCanUse_whoUse, bool CallFunc_Greater_IntInt_ReturnValue, class USlot_C* CallFunc_getSlot_slotOut_1, bool CallFunc_getSlot_findo_1, class USlot_C* CallFunc_getSlot_slotOut_2, bool CallFunc_getSlot_findo_2, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class USlot_C* CallFunc_getSlot_slotOut_3, bool CallFunc_getSlot_findo_3, TArray<int32>& K2Node_MakeArray_Array, bool K2Node_SwitchString_CmpSuccess, bool K2Node_SwitchString_CmpSuccess_1, bool K2Node_SwitchString_CmpSuccess_2, TArray<int32>& K2Node_MakeArray_Array_1, class USlot_C* CallFunc_getSlot_slotOut_4, bool CallFunc_getSlot_findo_4, class USlot_C* CallFunc_getSlot_slotOut_5, bool CallFunc_getSlot_findo_5, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, class UM2data_C* CallFunc_game_game, bool CallFunc_IsValid_ReturnValue, TArray<class FString>& K2Node_MakeArray_Array_2, bool CallFunc_IsValid_ReturnValue_1, TArray<class FString>& K2Node_MakeArray_Array_3, bool CallFunc_canChangeEqup_can, bool CallFunc_canChangeEqup_can_1, bool CallFunc_canChangeEqup_can_2, class UCostumeAttr_C* CallFunc_Create_ReturnValue);
		void Costumable_Use(int32 Slotid, const class FString& CallFunc_gtext_ReturnValue, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo, bool CallFunc_itemCanUse_isCanUse, const class FString& CallFunc_itemCanUse_message, const class FString& CallFunc_itemCanUse_whoUse, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, int32 CallFunc_getEmptySlot_emptySlotId, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool K2Node_SwitchString_CmpSuccess, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_canChangeEqup_can, bool CallFunc_canChangeSlot_can);
		void SendSlotChangeReq(int32 FromSlot, int32 Fromitem, int32 TargetSlot, int32 TargetItem, TArray<class FString>& K2Node_MakeArray_Array, TArray<int32>& K2Node_MakeArray_Array_1);
		void Play(int32 Slotid, bool K2Node_SwitchInteger_CmpSuccess);
		void SellItem(class USlot_C* Slot, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Divide_IntInt_ReturnValue, bool CallFunc_Contains_ReturnValue, int32 CallFunc_Multiply_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_FormatDot_yangText, TArray<class FString>& K2Node_MakeArray_Array, TArray<int32>& K2Node_MakeArray_Array_1, const class FString& CallFunc_gtext_ReturnValue, const class FString& CallFunc_gtext_ReturnValue_1, const class FString& CallFunc_formatText_ReturnValue);
		void CanChangeEqup(bool* Can, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_EqualEqual_BoolBool_ReturnValue, const class FString& Temp_string_Variable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_localeString_text, bool CallFunc_EqualEqual_BoolBool_ReturnValue_1, bool CallFunc_EqualEqual_BoolBool_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_5);
		void QuestString(int32 ID, class FString* Text, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
		void LocaleString(int32 ID, class FString* Text, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
		void Msg(const class FString& Msg);
		void Addchate(int32 Sender, const class FString& SenderName, const class FString& Message, bool CallFunc_NotEqual_StrStr_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess);
		void LockPlayer();
		void GetYangText(class FString* YangText, const class FString& CallFunc_Gtext_text, bool CallFunc_isArabic_is, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Gtext_text_1, const class FString& CallFunc_dotNumberS_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3);
		void OnlyNumber(class UEditableTextBox* Ref, class FText Text, bool ZeroPlus, int32 MaxValue, bool* Res, const class FString& CallFunc_Conv_TextToString_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, int32 CallFunc_Conv_StringToInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, int32 CallFunc_Conv_StringToInt_ReturnValue_1, int32 CallFunc_Len_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue_1, bool CallFunc_IsNumeric_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
		void Msgbox(const class FString& Msg, class UMsgbox_C* CallFunc_Create_ReturnValue);
		void CanChangeSlot(bool* Can, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_EqualEqual_BoolBool_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_EqualEqual_BoolBool_ReturnValue_2, bool CallFunc_EqualEqual_BoolBool_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_EqualEqual_BoolBool_ReturnValue_4, bool CallFunc_EqualEqual_BoolBool_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_EqualEqual_BoolBool_ReturnValue_6, bool CallFunc_EqualEqual_BoolBool_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_5, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2);
		void GetRankText(int32 Rankk, class FString* RankText, int32 Rank, const class FString& CallFunc_gtext_ReturnValue, const class FString& CallFunc_gtext_ReturnValue_1, const class FString& CallFunc_gtext_ReturnValue_2, const class FString& CallFunc_gtext_ReturnValue_3, const class FString& CallFunc_gtext_ReturnValue_4, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_2, bool CallFunc_Greater_IntInt_ReturnValue_3, const class FString& CallFunc_gtext_ReturnValue_5, const class FString& CallFunc_gtext_ReturnValue_6, const class FString& CallFunc_gtext_ReturnValue_7, const class FString& CallFunc_gtext_ReturnValue_8, bool CallFunc_Greater_IntInt_ReturnValue_4, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_3, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
		void GetEmptySlot(bool IsDouble, int32* EmptySlotId, bool Temp_bool_Variable, int32 Temp_int_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo, class USlot_C* CallFunc_getSlot_slotOut_1, bool CallFunc_getSlot_findo_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, class USlot_C* CallFunc_getSlot_slotOut_2, bool CallFunc_getSlot_findo_2, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
		void GetSkillSlot(int32 ID, int32 PId, class USlot_C** Skill, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class USlot_C* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, bool CallFunc_EqualEqual_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_4);
		void GetSlotPure(int32 ID, class USlot_C** SlotOut, bool* Findo, bool Find, class USlot_C* CallFunc_getSlot_slotOut, bool CallFunc_getSlot_findo);
		void GetSkill(int32 ID, struct FSkill* Skill, const struct FSkill& CallFunc_getSkill_ob);
		void ItemCanUse(const struct FIitem& Item, bool NoLevel, bool* IsCanUse, class FString* Message, class FString* WhoUse, const class FString& Cinsm, int32 LevelLimit, const class FString& WhoCanUse, bool CanUse, const class FString& ItemSubTypem, const class FString& ItemTypem, const class FString& Typem, const class FString& Temp_string_Variable, bool CallFunc_Contains_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, bool CallFunc_Contains_ReturnValue_1, bool CallFunc_Contains_ReturnValue_2, bool CallFunc_Contains_ReturnValue_3, const class FString& Temp_string_Variable_1, const class FString& Temp_string_Variable_2, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& Temp_string_Variable_3, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Gtext_text, bool CallFunc_Contains_ReturnValue_4, const class FString& CallFunc_qtext_ReturnValue, bool CallFunc_Contains_ReturnValue_5, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_1);
		void FormatDot(const class FString& Yang, class FString* YangText, const class FString& T, int32 CallFunc_Len_ReturnValue, int32 CallFunc_Len_ReturnValue_1, TArray<class FString>& CallFunc_GetCharacterArrayFromString_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, int32 CallFunc_Len_ReturnValue_2, int32 CallFunc_FindSubstring_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue_1, int32 CallFunc_Conv_StringToInt_ReturnValue, class FText CallFunc_Conv_IntToText_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue);
		void GetPlayerCoin(int32* PlayerYang, int32 CallFunc_Conv_StringToInt_ReturnValue);
		void GetPlayerYang(int32* PlayerYang, int32 CallFunc_Conv_StringToInt_ReturnValue);
		void GetEfsunName(const class FString& Type, int32 Value, class FString* Text, const class FString& Textme, const class FString& Typem, const class FString& CallFunc_Conv_IntToString_ReturnValue, const class FString& CallFunc_Replace_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Replace_ReturnValue_1, const class FString& CallFunc_gtext_ReturnValue, int32 CallFunc_Len_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const class FString& CallFunc_GetSubstring_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_NotEqual_StrStr_ReturnValue, const class FString& CallFunc_gtext_ReturnValue_1, bool CallFunc_EqualEqual_StrStr_ReturnValue);
		void DateTextKalanSure(const struct FTimespan& Tim, class FString* Outdate, const class FString& Date, int32 CallFunc_BreakTimespan_Days, int32 CallFunc_BreakTimespan_Hours, int32 CallFunc_BreakTimespan_Minutes, int32 CallFunc_BreakTimespan_Seconds, int32 CallFunc_BreakTimespan_Milliseconds, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue_2, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, const class FString& CallFunc_gtext_ReturnValue, const class FString& CallFunc_gtext_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, const class FString& CallFunc_gtext_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, const class FString& CallFunc_gtext_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_6, const class FString& CallFunc_Concat_StrStr_ReturnValue_7, const class FString& CallFunc_Concat_StrStr_ReturnValue_8);
		void GetItem(int32 ID, struct FIitem* Item, const struct FIitem& K2Node_MakeStruct_iitem, const struct FIitem& CallFunc_getItem_ob, bool CallFunc_getItem_found);
		void GetDes(int32 ItemId, class FString* ItemDes, const class FString& CallFunc_getItemDes_ob);
		void GetQuickSlot(int32 ID, struct FQuickSlot* Q, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FQuickSlot& CallFunc_Array_Get_Item, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
		void GetSlot(int32 ID, class USlot_C** SlotOut, bool* Findo, bool Find, const struct FSlot& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class USlot_C* K2Node_DynamicCast_AsSlot, bool K2Node_DynamicCast_bSuccess);
		void GetClientSkill(int32 ID, struct FSkill* Skill, TArray<class UTexture2D*>& K2Node_MakeArray_Array, const struct FSkill& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const struct FSkill& K2Node_MakeStruct_skill, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);
		void OpenMesajBox(const struct FDmData& Ata, bool UsteGetir);
		void GetCharData(struct FCharData* CharData, bool CallFunc_IsValid_ReturnValue);
		void ToggleObject(class UUserWidget* Obj, enum class ESlateVisibility CallFunc_GetVisibility_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
		void SendPacket(int32 PId, TArray<int32>& Ints, TArray<class FString>& Strings, const TArray<class FString>& S, TArray<class FString>& K2Node_MakeArray_Array);
		void PlaySound(const class FString& SoundName, float Volume, class UM2data_C* CallFunc_game_game, class UM2data_C* CallFunc_game_game_1, float CallFunc_Conv_IntToFloat_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue_1);
		void GameString(const class FString& Name, class FString* Text, const class FString& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const class FString& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1);
		void AskSell(const class FString& AskText, int32 Slotid);
		void OK_Event_0();
		void AskWebsite(const class FString& URL);
		void CustomEvent_0();
		void ExecuteUbergraph_m2data(int32 EntryPoint, class UMsgbox_C* CallFunc_Create_ReturnValue, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate, class UMsgbox_C* CallFunc_Create_ReturnValue_1, FDelegateProperty_ K2Node_CreateDelegate_OutputDelegate_1, const class FString& K2Node_CustomEvent_askText, int32 K2Node_CustomEvent_slotid, TArray<int32>& K2Node_MakeArray_Array, TArray<class FString>& K2Node_MakeArray_Array_1, class UM2data_C* CallFunc_game_game, const class FString& K2Node_CustomEvent_url, bool CallFunc_Contains_ReturnValue);
		void Unfocus__DelegateSignature();
	};
}